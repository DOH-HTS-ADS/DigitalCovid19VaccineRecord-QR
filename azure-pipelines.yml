# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Azure Pipelines

stages:
- stage: Build
  displayName: Build solution
  jobs:  
  - job: Build
    displayName: Build and publish solution
    steps:

    - task: Npm@1
      displayName: 'Install Application Dependencies'
      inputs:
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: false

    - task: Npm@1
      displayName: 'Run ''build'' script'
      inputs:
        command: custom
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: false
        customCommand: 'run build --if-present'

    - task: Npm@1
      displayName: 'Remove extraneous packages'
      inputs:
        command: custom
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: false
        customCommand: 'prune --production'
 
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
 
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs: 
        pathtoPublish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    
- stage: Deploy
  displayName: Deploy solution to Development
  dependsOn: []
  jobs:
    - deployment: dev_deployment
      displayName: Deploy to Development Environment
      environment: Development
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@1
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureFunctionApp@1
              inputs:
                azureSubscription: 'doh-sub-vaccs-01 (c47773b2-99d9-4614-8b2c-737ab9ec3e73)-1813'
                appType: 'functionApp'
                appName: 'fa-waverify-qrc-dev'
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'
    - deployment: qa_deployment
      displayName: Deploy to QA Environment
      environment: QA
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@1
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureFunctionApp@1
              inputs:
                azureSubscription: 'doh-sub-vaccs-01 (c47773b2-99d9-4614-8b2c-737ab9ec3e73)-1813'
                appType: 'functionApp'
                appName: 'fa-waverify-qrc-qa'
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'
    - deployment: prod_deployment
      displayName: Deploy to Production Environment
      environment: Production
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@1
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureFunctionApp@1
              inputs:
                azureSubscription: 'doh-sub-vaccs-01 (c47773b2-99d9-4614-8b2c-737ab9ec3e73)-1813'
                appType: 'functionApp'
                appName: 'fa-waverify-qrc-prod'
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'
            