# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Azure Pipelines

stages:
- stage: Build
  displayName: Build solution
  jobs:  
  - job: Build
    displayName: Build and publish solution
    steps:

    - task: Npm@1
      displayName: 'Install Application Dependencies'
      inputs:
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: false

    - task: Npm@1
      displayName: 'Run ''build'' script'
      inputs:
        command: custom
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: false
        customCommand: 'run build --if-present'

    - task: Npm@1
      displayName: 'Remove extraneous packages'
      inputs:
        command: custom
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: false
        customCommand: 'prune --production'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifact: 'drop'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy solution
  jobs:
  - job: Deploy
    displayName: Deploy solution
    steps:
    
    - task: AzureFunctionApp@1
      inputs:
        azureSubscription: 'doh-sub-vaccs-01 (c47773b2-99d9-4614-8b2c-737ab9ec3e73)-1813'
        appType: 'functionApp'
        appName: 'fa-waverify-qrc-dev'
        package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
        deploymentMethod: 'auto'
    
    